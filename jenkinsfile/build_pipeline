pipeline {
    agent any
    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }
        stage('Setup Docker') {
            steps {
                script {
                    def imageExists = sh(script: 'docker inspect -f . node:16.17.0 || echo "not found"', returnStdout: true).trim()
                    if (imageExists == "not found") {
                        sh 'docker pull node:16.17.0'
                    }
                }
            }
        }
        stage('Build Frontend') {
            steps {
                script {
                    dir('webapp') {
                        try {
                            sh 'npm install'
                        } catch (Exception e) {
                            echo 'npm install failed'
                            sh 'cat npm-debug.log || true'
                            error 'npm install failed'
                        }
                    }
                }
            }
        }
        stage('Build Backend') {
            when {
                not {
                    failed()
                }
            }
            steps {
                script {
                    // Vos étapes pour construire le backend ici
                }
            }
        }
        stage('Archive Jenkinsfile') {
            when {
                not {
                    failed()
                }
            }
            steps {
                archiveArtifacts artifacts: 'Jenkinsfile'
            }
        }
    }
    post {
        always {
            echo 'Pipeline terminé, vérifiez les artefacts.'
        }
        failure {
            echo 'Le build a échoué, veuillez vérifier les logs pour plus de détails.'
        }
    }
}
